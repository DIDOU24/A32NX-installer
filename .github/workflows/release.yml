name: Upload Release Asset

# Trigger on release creation
on:
  release:
    types:
      - created

jobs:
  build:
    name: Upload Release Asset
    runs-on: windows-latest # Need to use windows as pyinstaller should create an .exe file
    strategy:
      matrix:
        python-version: [3.8] # For this workflow this should remain a single version as we only want to upload one executable
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Checkout PyInstaller repo
        uses: actions/checkout@v2
        with:
          repository: pyinstaller/pyinstaller
          ref: master
      - name: Install PyInstaller from source with generated bootloader # This is needed to prevent antivirus false positive: https://stackoverflow.com/a/52054580
        run: |
          cd bootloader
          python ./waf all
          cd ..
          python setup.py install
      - name: Checkout AN32X_Installer repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -r requirements.txt
      - name: Build executable
        run: |
          pyinstaller Downloader.spec
          Compress-Archive -Path dist\* -DestinationPath A32NX_Downloader_${{ github.event.release.tag_name }}.zip
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./A32NX_Downloader_${{ github.event.release.tag_name }}.zip
          asset_name: A32NX_Downloader_${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
